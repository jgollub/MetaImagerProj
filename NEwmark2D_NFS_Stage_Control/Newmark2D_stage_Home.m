function [xminstepVal, yminstepVal] = Newmark2D_stage_Home(objg,speedmms)
steptomm=5000;
stepperspeed=round(speedmms*steptomm);
stepperaccel=round(10*stepperspeed);
%set return character
CRLF =[char(13), char(10)];

%% load home program->goes to edge of stage and then sets zero position
stagehome=['#HOME', CRLF,...
'AC ',num2str(stepperaccel),',',num2str(stepperaccel), CRLF,...
'DC ',num2str(stepperaccel),',',num2str(stepperaccel), CRLF,...
'JG ',num2str(-stepperspeed),',',num2str(-stepperspeed), CRLF,... 
'NOTE jog until you hit limits', CRLF,...
'BG', CRLF,...
'NOTE wait for end of move', CRLF,...
'AM', CRLF,...
'NOTE take 1mm step back from edge', CRLF,...
'PR 10000,10000', CRLF,...
'BG', CRLF,...
'AM', CRLF,...
'DP 0,0', CRLF,...
'NOTE capture min,max step val', CRLF,...
'minx=_RPA', CRLF,...
'miny=_RPB', CRLF,...
'NOTE jog to other side and record pos', CRLF,...
'SP 125000,125000', CRLF,...
'EN', CRLF];

objg.programDownload(stagehome);
response=objg.command(['XQ']);

testdone=1;
while (testdone>-1) || isnan(testdone)
    pause(.01);
    testdone=str2double(strtok(objg.command(['MG _XQ'])));
end

xminstepVal=strtok(objg.command(['MG minx']));
xminstepVal=str2double(xminstepVal);

yminstepVal=strtok(objg.command(['MG miny']));
yminstepVal=str2double(yminstepVal);

end

